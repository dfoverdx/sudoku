import Board from '../board';

it('constructs an empty board', () => {
    expect(Board.Empty).toMatchSnapshot();
});

it('constructs a board with values', () => {
    let board = Board.parse(`
        123456789
        .........
        .........
        .........
        .........
        .........
        .........
        .........
        .........
    `);

    expect(board).toMatchSnapshot();

    board = Board.parse(`
        123456789
        456789123
        789123456
        .........
        .........
        .........
        .........
        .........
        .........
    `);

    expect(board).toMatchSnapshot();
});

it('throws errors when parsing bad board data', () => {
    // empty string
    expect(() => Board.parse(``)).toThrowError();

    // 8 lines
    expect(() => Board.parse(`
        012345678
        .........
        .........
        .........
        .........
        .........
        .........
        .........
        .........
    `)).toThrowError();

    // 10 lines
    expect(() => Board.parse(`
        123456789
        .........
        .........
        .........
        .........
        .........
        .........
        .........
        .........
        .........
    `)).toThrowError();

    // missing values
    expect(() => Board.parse(`
        1234567
        .........
        .........
        .........
        .........
        .........
        .........
        .........
        .........
    `)).toThrowError();

    // extra values
    expect(() => Board.parse(`
        1234567891
        .........
        .........
        .........
        .........
        .........
        .........
        .........
        .........
    `)).toThrowError();
});

it('clones a board', () => {

});

it('sets values properly', () => {
    let board = Board.Empty;
    expect(board.setValue(0, 0, 1)).toBe(true);
    expect(board).toMatchSnapshot();
});